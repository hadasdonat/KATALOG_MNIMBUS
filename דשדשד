<!DOCTYPE html>
<html lang="he" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>תוצאות חיפוש</title>
    <link rel="stylesheet" href="GCP.css">
</head>
<body>
    <div class="container">
        <h1>תוצאות חיפוש</h1>
        <div id="results-container" class="results-container">
            <!-- התוצאות יתווספו כאן דינמית -->
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // קבלת הבחירות מה-Session Storage
             // Load GCP data from GCP_5.json
        fetch("GCP_5.json")
          .then((response) => response.json())
          .then((data) => {
            // Filter only Google/GCP products
            const gcpData = data["שירותים מאושרים - GCP"]
              .filter((item) => item !== null) // Remove null entries
              .filter((item) => {
                if (!item) return false;
                const manufacturer = item.Column6?.toLowerCase() || "";
                const serviceId = item.Column2?.toLowerCase() || "";
                // Check if it's a Google/GCP product
                return (
                  manufacturer.includes("google") ||
                  manufacturer.includes("gcp") ||
                  serviceId.startsWith("g-")
                ); // Products with G- prefix are Google products
              });
            renderCards(gcpData);
          })
          .catch((error) => console.error("Error loading data:", error));
        // Initialize filters

            
            if (!filters) {
                document.getElementById('results-container').innerHTML = '<p>לא נבחרו מסננים</p>';
                return;
            }

            // הצגת הבחירות בדף
            const { filters: selectedFilters, freeText, category } = filters;

           

            // סינון נתונים
            const filteredData = data.filter(item => {
                const matchesFilters = selectedFilters.includes(item.location) || selectedFilters.includes(item.type);
                const matchesCategory = !category || item.category.toLowerCase() === category.toLowerCase();
                const matchesFreeText = !freeText || item.name.includes(freeText);
                return matchesFilters && matchesCategory && matchesFreeText;
            });

            // הצגת הנתונים
            const container = document.getElementById('results-container');
            if (filteredData.length > 0) {
                container.innerHTML = filteredData.map(item => `
                    <div class="result-card">
                        <h3>${item.name}</h3>
                        <p>מיקום: ${item.location}</p>
                        <p>סוג: ${item.type}</p>
                        <p>קטגוריה: ${item.category}</p>
                    </div>
                `).join('');
            } else {
                container.innerHTML = '<p>לא נמצאו תוצאות</p>';
            }

            // Setup event listeners
        ["israel", "abroad", "saas", "nonSaas"].forEach((filterId) => {
          document.getElementById(filterId).addEventListener("change", (e) => {
            filters[filterId] = e.target.checked;
            filterResults();
          });
        });

        document.getElementById("mainSearch").addEventListener("input", (e) => {
          filters.searchText = e.target.value;
          filterResults();
        });

        document
          .getElementById("categorySearch")
          .addEventListener("change", (e) => {
            filters.categorySearch = e.target.value;
            filterResults();
          });
          document.getElementById("layer1").addEventListener("change", (e) => {
          filters.layer1 = e.target.checked;
          filterResults();
        });

        document.getElementById("layer5").addEventListener("change", (e) => {
          filters.layer5 = e.target.checked;
          filterResults();
        });

        function renderCards(data) {
          const container = document.getElementById("results-container");
          if (!data || data.length === 0) {
            container.innerHTML =
              '<div class="no-results">לא נמצאו תוצאות</div>';
            return;
          }

          container.innerHTML = data
            .map(
              (item) => `
                    <div class="result-card" 
                         data-service-type="${item.Column7}"
                         data-company="${item.Column3}"
                         data-manufacturer="${item.Column4}">
                        <h3>${item.Column5 || "ללא שם"}</h3>
                        <p class="description">${
                          item.Column6 || "ללא תיאור"
                        }</p>
                        <div class="details">
                            <p><strong>חברה:</strong> ${item.Column3 || ""}</p>
                            <p><strong>יצרן:</strong> ${item.Column4 || ""}</p>
                            <p><strong>סוג שירות:</strong> ${
                              item.Column7 || ""
                            }</p>
                            <p><strong>איש קשר:</strong> ${
                              item.Column10 || ""
                            }</p>
                            <p><strong>מועד אישור:</strong> ${
                              item.Column11 || ""
                            }</p>
                            ${
                              item.Column12
                                ? `<p class="notes"><strong>הערות:</strong> ${item.Column12}</p>`
                                : ""
                            }
                            ${
                              item.Column9
                                ? `<p><a href="${item.Column9}" target="_blank">קישור למחירון</a></p>`
                                : ""
                            }
                        </div>
                    </div>
                `
            )
            .join("");
        }

       

        function filterResults() {
          const cards = document.querySelectorAll(".result-card");
          const searchText = filters.searchText.toLowerCase();
          const categoryText = filters.categorySearch.toLowerCase();

          cards.forEach((card) => {
            const text = card.textContent.toLowerCase();
            const serviceType = card.dataset.serviceType?.toLowerCase();
            const location = card.dataset.location?.toLowerCase();

            // אם נבחר "חו"ל" ולא נבחר "בארץ", הסתר הכל
            if (filters.abroad && !filters.israel) {
              card.style.display = "none";
              return;
            }
            if (filters.layer1 && !filters.layer5) {
              card.style.display = "none";
              return;
            }
            const serviceTypeMatch =
              (!filters.saas && !filters.nonSaas) ||
              (filters.saas && serviceType === "saas") ||
              (filters.nonSaas && serviceType === "non-saas");

            const searchMatch = !searchText || text.includes(searchText);

            const categoryMatch =
              !categoryText || text.includes(categoryText);

            card.style.display =
              serviceTypeMatch && searchMatch && categoryMatch
                ? "block"
                : "none";
          });
        }
        });
    </script>
</body>
</html>






<!DOCTYPE html>
<html lang="he" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>תוצאות חיפוש</title>
    <link rel="stylesheet" href="GCP.css">
</head>
<body>
    <div class="container">
        <h1>תוצאות חיפוש</h1>
        <div id="results-container" class="results-container">
            <!-- התוצאות יתווספו כאן דינמית -->
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // קבלת הבחירות מה-Session Storage
             // Load GCP data from GCP_5.json
        fetch("GCP_5.json")
          .then((response) => response.json())
          .then((data) => {
            // Filter only Google/GCP products
            const gcpData = data["שירותים מאושרים - GCP"]
              .filter((item) => item !== null) // Remove null entries
              .filter((item) => {
                if (!item) return false;
                const manufacturer = item.Column6?.toLowerCase() || "";
                const serviceId = item.Column2?.toLowerCase() || "";
                // Check if it's a Google/GCP product
                return (
                  manufacturer.includes("google") ||
                  manufacturer.includes("gcp") ||
                  serviceId.startsWith("g-")
                ); // Products with G- prefix are Google products
              });
            renderCards(gcpData);
          })
          .catch((error) => console.error("Error loading data:", error));
        // Initialize filters

            
            if (!filters) {
                document.getElementById('results-container').innerHTML = '<p>לא נבחרו מסננים</p>';
                return;
            }

            // הצגת הבחירות בדף
            const { filters: selectedFilters, freeText, category } = filters;

           

            // סינון נתונים
            const filteredData = data.filter(item => {
                const matchesFilters = selectedFilters.includes(item.location) || selectedFilters.includes(item.type);
                const matchesCategory = !category || item.category.toLowerCase() === category.toLowerCase();
                const matchesFreeText = !freeText || item.name.includes(freeText);
                return matchesFilters && matchesCategory && matchesFreeText;
            });

            // הצגת הנתונים
            const container = document.getElementById('results-container');
            if (filteredData.length > 0) {
                container.innerHTML = filteredData.map(item => `
                    <div class="result-card">
                        <h3>${item.name}</h3>
                        <p>מיקום: ${item.location}</p>
                        <p>סוג: ${item.type}</p>
                        <p>קטגוריה: ${item.category}</p>
                    </div>
                `).join('');
            } else {
                container.innerHTML = '<p>לא נמצאו תוצאות</p>';
            }

            // Setup event listeners
        ["israel", "abroad", "saas", "nonSaas"].forEach((filterId) => {
          document.getElementById(filterId).addEventListener("change", (e) => {
            filters[filterId] = e.target.checked;
            filterResults();
          });
        });

        document.getElementById("mainSearch").addEventListener("input", (e) => {
          filters.searchText = e.target.value;
          filterResults();
        });

        document
          .getElementById("categorySearch")
          .addEventListener("change", (e) => {
            filters.categorySearch = e.target.value;
            filterResults();
          });
          document.getElementById("layer1").addEventListener("change", (e) => {
          filters.layer1 = e.target.checked;
          filterResults();
        });

        document.getElementById("layer5").addEventListener("change", (e) => {
          filters.layer5 = e.target.checked;
          filterResults();
        });

        function renderCards(data) {
          const container = document.getElementById("results-container");
          if (!data || data.length === 0) {
            container.innerHTML =
              '<div class="no-results">לא נמצאו תוצאות</div>';
            return;
          }

          container.innerHTML = data
            .map(
              (item) => `
                    <div class="result-card" 
                         data-service-type="${item.Column7}"
                         data-company="${item.Column3}"
                         data-manufacturer="${item.Column4}">
                        <h3>${item.Column5 || "ללא שם"}</h3>
                        <p class="description">${
                          item.Column6 || "ללא תיאור"
                        }</p>
                        <div class="details">
                            <p><strong>חברה:</strong> ${item.Column3 || ""}</p>
                            <p><strong>יצרן:</strong> ${item.Column4 || ""}</p>
                            <p><strong>סוג שירות:</strong> ${
                              item.Column7 || ""
                            }</p>
                            <p><strong>איש קשר:</strong> ${
                              item.Column10 || ""
                            }</p>
                            <p><strong>מועד אישור:</strong> ${
                              item.Column11 || ""
                            }</p>
                            ${
                              item.Column12
                                ? `<p class="notes"><strong>הערות:</strong> ${item.Column12}</p>`
                                : ""
                            }
                            ${
                              item.Column9
                                ? `<p><a href="${item.Column9}" target="_blank">קישור למחירון</a></p>`
                                : ""
                            }
                        </div>
                    </div>
                `
            )
            .join("");
        }

       

        function filterResults() {
          const cards = document.querySelectorAll(".result-card");
          const searchText = filters.searchText.toLowerCase();
          const categoryText = filters.categorySearch.toLowerCase();

          cards.forEach((card) => {
            const text = card.textContent.toLowerCase();
            const serviceType = card.dataset.serviceType?.toLowerCase();
            const location = card.dataset.location?.toLowerCase();

            // אם נבחר "חו"ל" ולא נבחר "בארץ", הסתר הכל
            if (filters.abroad && !filters.israel) {
              card.style.display = "none";
              return;
            }
            if (filters.layer1 && !filters.layer5) {
              card.style.display = "none";
              return;
            }
            const serviceTypeMatch =
              (!filters.saas && !filters.nonSaas) ||
              (filters.saas && serviceType === "saas") ||
              (filters.nonSaas && serviceType === "non-saas");

            const searchMatch = !searchText || text.includes(searchText);

            const categoryMatch =
              !categoryText || text.includes(categoryText);

            card.style.display =
              serviceTypeMatch && searchMatch && categoryMatch
                ? "block"
                : "none";
          });
        }
        });
    </script>
</body>
</html>
